name: Deploy to EC2 Airflow

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Network Diagnostics
      run: |
        echo "GitHub Actions Runner IP: $(curl -s https://api.ipify.org)"
        
    - name: Deploy to EC2
      uses: appleboy/scp-action@master
      with:
        host: 52.205.187.101
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "dags/,plugins/,requirements.txt,docker-compose.yaml"
        target: "/home/ec2-user/airflow"
        strip_components: 0
        timeout: 15m
        command_timeout: 15m

    - name: Restart Airflow on EC2
      uses: appleboy/ssh-action@master
      with:
        host: 52.205.187.101
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        command_timeout: 30m
        script: |
          set -x
          cd ~/airflow
          
          # Check if configuration files were updated
          RESTART_NEEDED=false
          if [ -f requirements.txt.original ] && ! cmp -s requirements.txt requirements.txt.original; then
            RESTART_NEEDED=true
          fi
          if [ -f docker-compose.yaml.original ] && ! cmp -s docker-compose.yaml docker-compose.yaml.original; then
            RESTART_NEEDED=true
          fi
          
          # Save current versions as original
          cp requirements.txt requirements.txt.original
          cp docker-compose.yaml docker-compose.yaml.original
          
          # Restart Airflow if needed
          if [ "$RESTART_NEEDED" = true ]; then
            echo "Restarting Airflow services..."
            docker compose pull
            docker compose down
            docker compose up -d
          else
            # Force restart anyway to ensure changes take effect
            echo "Forcing Airflow restart to ensure all changes are applied..."
            docker compose restart
          fi
          
          echo "Deployment completed successfully"